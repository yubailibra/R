csRatioColumn <- CellStyle(outwb)+DataFormat("0.00") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csPvalColumn <- CellStyle(outwb)+ DataFormat("0.0") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csAnnotColumn <- CellStyle(outwb)+Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csCols <- list("1"=csVarColumn, "2"=csRatioColumn, "3"=csPvalColumn, "4"=csAnnotColumn)
addDataFrame(wb_data,outsheet,col.names=T, row.names=F, startRow=1, startColumn=1, colStyle=csCols, colnamesStyle=csColNames, showNA=F, characterNA=F)
setColumnWidth(outsheet,colIndex=4,colWidth=11)
saveWorkbook(outwb, file="my_examples.xlsx")
outwb <- createWorkbook(type="xlsx")
outsheet <- createSheet(outwb, sheetName="myexperiment1")
#cblock <- CellBlock(outsheet, startRow=1, startColumn=1, noRows=nrow(wb_data)+1, noColumns=ncol(wb_data), create=TRUE)
csColNames <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csVarColumn <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csRatioColumn <- CellStyle(outwb)+DataFormat("0.00") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csPvalColumn <- CellStyle(outwb)+ DataFormat("0.0") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csAnnotColumn <- CellStyle(outwb)+Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csCols <- list("1"=csVarColumn, "2"=csRatioColumn, "3"=csPvalColumn, "4"=csAnnotColumn)
addDataFrame(wb_data,outsheet,col.names=T, row.names=F, startRow=1, startColumn=1, colStyle=csCols, colnamesStyle=csColNames, showNA=F, characterNA=F)
setColumnWidth(outsheet,colIndex=4,colWidth=11)
saveWorkbook(outwb, file="my_examples.xlsx")
outwb <- createWorkbook(type="xlsx")
outsheet <- createSheet(outwb, sheetName="myexperiment1")
#cblock <- CellBlock(outsheet, startRow=1, startColumn=1, noRows=nrow(wb_data)+1, noColumns=ncol(wb_data), create=TRUE)
csColNames <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csVarColumn <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csRatioColumn <- CellStyle(outwb)+DataFormat("0.00") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csPvalColumn <- CellStyle(outwb)+ DataFormat("0.0") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csAnnotColumn <- CellStyle(outwb)+Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csCols <- list("1"=csVarColumn, "2"=csRatioColumn, "3"=csPvalColumn, "4"=csAnnotColumn)
addDataFrame(wb_data,outsheet,col.names=T, row.names=F, startRow=1, startColumn=1, colStyle=csCols, colnamesStyle=csColNames, showNA=F, characterNA=F)
setColumnWidth(outsheet,colIndex=4,colWidth=11)
saveWorkbook(outwb, file="my_examples.xlsx")
addDataFrame(wb_data,outsheet,col.names=T, row.names=F, startRow=1, startColumn=1, colStyle=csCols, colnamesStyle=csColNames, showNA=F, characterNA="")
setColumnWidth(outsheet,colIndex=4,colWidth=11)
saveWorkbook(outwb, file="my_examples.xlsx")
?setFill
CB.setFill
?CB.setFill
?Fill()
?CB.setFill
?CB.setFill
?Fill
?setCellStyle()
outsheet[2,2]
class(outsheet[[2,2]])
outsheet[[2,2]]
getRow
getRows()
?getRows()
?setCellStyle
?getCellValue
?setCellStyle
?Fill
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"]
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=T)
ratio <- getCellValue(ratiocell)
pval <-getCellValue(pvalcell)
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="orange", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell, csCell)
}
}
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"]
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=T)
ratio <- getCellValue(ratiocell)
pval <-getCellValue(pvalcell)
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="orange", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell, csCell)
}
}
ratiorows=2:length(wb_data[,"ratio"]
)
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"])
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=T)
ratio <- getCellValue(ratiocell)
pval <-getCellValue(pvalcell)
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="orange", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell, csCell)
}
}
each
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
each
ratiocol
getRows(outsheet, rowIndex=each)
getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol)
getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"])
pvalcol=which(colnames(wb_data)=="pvalue")
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=T)
ratio <- getCellValue(ratiocell)
ratio <- getCellValue(ratiocell)
?getCellValue
class(ratiocell)
ratiocell
ratio <- getCellValue(ratiocell[[1]])
ratio
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=T)
ratiocell
class(ratiocell)
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
class(ratiocell)
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"])
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="orange", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
}
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="orange", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"])
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="orange", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
saveWorkbook(outwb, file="my_examples.xlsx")
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"])
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#csSheetTitle <- CellStyle(outwb) + Font(outwb, heightInPoints=14, isBold=TRUE)
#csSheetSubTitle <- CellStyle(outwb) + Font(outwb, heightInPoints=12, isItalic=TRUE, isBold=FALSE)
#csTableRowNames <- CellStyle(outwb) + Font(outwb, isBold=TRUE)
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiocol=which(colnames(wb_data)=="ratio")
ratiorows=2:length(wb_data[,"ratio"])
pvalcol=which(colnames(wb_data)=="pvalue")
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=ratiocol,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=pvalcol,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow", foregroundColor="black") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan", foregroundColor=NULL) + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#csSheetTitle <- CellStyle(outwb) + Font(outwb, heightInPoints=14, isBold=TRUE)
#csSheetSubTitle <- CellStyle(outwb) + Font(outwb, heightInPoints=12, isItalic=TRUE, isBold=FALSE)
#csTableRowNames <- CellStyle(outwb) + Font(outwb, isBold=TRUE)
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
nrow(wb_data)
ratiorows=2:(nrow(wb_data)+1))
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=1,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1))
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
outwb <- createWorkbook(type="xlsx")
outsheet <- createSheet(outwb, sheetName="myexperiment1")
#cblock <- CellBlock(outsheet, startRow=1, startColumn=1, noRows=nrow(wb_data)+1, noColumns=ncol(wb_data), create=TRUE)
csColNames <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csVarColumn <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csRatioColumn <- CellStyle(outwb)+DataFormat("0.00") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csPvalColumn <- CellStyle(outwb)+ DataFormat("0.0") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csAnnotColumn <- CellStyle(outwb)+Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csCols <- list("1"=csVarColumn, "2"=csRatioColumn, "3"=csPvalColumn, "4"=csAnnotColumn)
addDataFrame(wb_data,outsheet,col.names=T, row.names=F, startRow=1, startColumn=1, colStyle=csCols, colnamesStyle=csColNames, showNA=F, characterNA="")
setColumnWidth(outsheet,colIndex=4,colWidth=11)
ratiorows=2:(nrow(wb_data)+1))
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white", foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
each
ratiorows=2:(nrow(wb_data)+1)
ratiorows
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor=NULL)
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
each
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
ratio
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor=NULL)
}
?Fill
FILL_STYLES_
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan",pattern="NO_FILL") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(backgroundColor="cyan",pattern="NO_FILL") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan",pattern="NO_FILL") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="white")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="grey",foregroundColor="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="grey",foregroundColor="white")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Fill(backgroundColor="grey",foregroundColor="")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
?Font
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Font(outwb, color="grey")
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Font(outwb, color="grey", isBold=T)
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
?FormatNumber
?DataFormat
dataFormat
dataFormat()
dataFormat
csColNames <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csVarColumn <- CellStyle(outwb) + Font(outwb, isBold=TRUE) + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csRatioColumn <- CellStyle(outwb)+DataFormat("0.00") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csPvalColumn <- CellStyle(outwb)+ DataFormat("#.###E+0") + Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csAnnotColumn <- CellStyle(outwb)+Alignment(wrapText=TRUE, horizontal="ALIGN_CENTER")
csCols <- list("1"=csVarColumn, "2"=csRatioColumn, "3"=csPvalColumn, "4"=csAnnotColumn)
addDataFrame(wb_data,outsheet,col.names=T, row.names=F, startRow=1, startColumn=1, colStyle=csCols, colnamesStyle=csColNames, showNA=F, characterNA="")
setColumnWidth(outsheet,colIndex=4,colWidth=11)
ratiorows=2:(nrow(wb_data)+1)
for(each in ratiorows){
ratiocell <- getCells(getRows(outsheet, rowIndex=each),colIndex=2,simplify=TRUE)
pvalcell <- getCells(getRows(outsheet, rowIndex=each),colIndex=3,simplify=TRUE)
ratio <- getCellValue(ratiocell[[1]])
pval <-getCellValue(pvalcell[[1]])
if( ratio >=1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="yellow") + Font(outwb, isBold=TRUE)
}else if(ratio <=1/1.5  && pval<=0.01){
csCell <- CellStyle(outwb) + Fill(foregroundColor="cyan") + Font(outwb, isBold=TRUE)
}else {
csCell <- CellStyle(outwb) + Font(outwb, color="grey", isBold=T)
}
setCellStyle(ratiocell[[1]], csCell)
}
#write it out
saveWorkbook(outwb, file="my_examples.xlsx")
head(outwb)
setwd("../GitHub/cuny//cuny_R")
getwd()
dir(getwd())
library(png)
library(grid)
library(png)
install.packages(png)
install.packages("png")
library(png)
library(kable)
install.packages(kable)
install.packages("kable")
library(RCurl)x <- getURL("https://raw.github.com/aronlindberg/latent_growth_classes/master/LGC_data.csv")y <- read.csv(text = x)
library(RCurl)x <- getURL("https://raw.github.com/aronlindberg/latent_growth_classes/master/LGC_data.csv")
x <- getURL("https://raw.github.com/aronlindberg/latent_growth_classes/master/LGC_data.csv")
y <- read.csv(text = x)
x
getURL("https://raw.github.com/aronlindberg/latent_growth_classes/master/LGC_data.csv")
